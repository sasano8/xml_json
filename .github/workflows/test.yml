name: Run test

on:
  push:
  pull_request:

jobs:
  container-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          # curl -sSL https://install.python-poetry.org | python3 - --uninstall
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true

      - name: Add path for Poetry
        run: echo "$HOME/.poetry/bin" >> $GITHUB_PATH

      # - name: Load cached venv
      #   id: cache-venv
      #   uses: actions/cache@v3
      #   with:
      #     path: .venv
      #     key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install Dependencies
        # if: steps.cache-venv.outputs.cache-hit != 'true'
        run: poetry install --with test

      - name: Check code style with Black
        run: poetry run black --check --diff .

      - name: Run Tests
        run: poetry run pytest -v tests --cov=./ --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: true
          verbose: true
